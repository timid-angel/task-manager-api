{
	"info": {
		"_postman_id": "e530e217-9b8b-4e80-ac27-2c8a4c9aff86",
		"name": "Task Manager",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "31638773"
	},
	"item": [
		{
			"name": "Get Tasks",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:8080/tasks",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"tasks"
					]
				},
				"description": "This endpoint makes an HTTP GET request to retrieve a list of tasks from the server. The response will be in JSON format and will include an array of task objects, each containing the following properties:\n\n- id (string): The unique identifier for the task.\n    \n- title (string): The title or name of the task.\n    \n- description (string): A brief description of the task.\n    \n- due_date (string): The due date for the task.\n    \n- status (string): The current status of the task.\n    \n\nExample response:\n\n``` json\n[\n    {\n        \"id\": \"123\",\n        \"title\": \"Task 1\",\n        \"description\": \"Complete task 1\",\n        \"due_date\": \"2022-12-31\",\n        \"status\": \"in_progress\"\n    },\n    {\n        \"id\": \"456\",\n        \"title\": \"Task 2\",\n        \"description\": \"Review task 2\",\n        \"due_date\": \"2022-11-30\",\n        \"status\": \"pending\"\n    }\n]\n\n ```"
			},
			"response": []
		},
		{
			"name": "Get One Task",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:8080/tasks/4",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"tasks",
						"4"
					]
				},
				"description": "### Get Task Details\n\nThis endpoint retrieves the details of a specific task.\n\n#### Request\n\n- Method: GET\n    \n- URL: `http://localhost:8080/tasks/4`\n    \n\n#### Response\n\n- Status: 200\n    \n- Content-Type: application/json\n    \n- Body:\n    \n    ``` json\n      {\n        \"id\": \"\",\n        \"title\": \"\",\n        \"description\": \"\",\n        \"due_date\": \"\",\n        \"status\": \"\"\n      }\n    \n     ```"
			},
			"response": []
		},
		{
			"name": "Create Task",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHBpcmVzQXQiOjE3MjMwMjY3MDUsInVzZXJuYW1lIjoia3lzayJ9.SWFXcdTPzCxHEHW8gfGg7rMm-GJGuEYHprUMzxsWjpQ",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"id\": \"3\",\n    \"title\": \"Wash dishes\",\n    \"description\": \"Just wash the dishes\",\n    \"due_date\": \"2024-08-05T14:50:56.313532456+03:00\",\n    \"status\": \"pending\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8080/tasks",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"tasks"
					]
				},
				"description": "This endpoint allows you to create a new task by sending an HTTP POST request to the specified URL. The request should include a JSON payload in the raw request body, with the following parameters:\n\n- id (string): The unique identifier for the task.\n    \n- title (string): The title of the task.\n    \n- description (string): A description of the task.\n    \n- due_date (string): The due date for the task.\n    \n- status (string): The status of the task.\n    \n\n### Request Body\n\n| Key | Type | Description |\n| --- | --- | --- |\n| id | text | The unique identifier for the task. |\n| title | text | The title of the task. |\n| description | text | A description of the task. |\n| due_date | text | The due date for the task. |\n| status | text | The status of the task. |\n\nThe response to the request will have a status code of 201, indicating that the task has been successfully created. The content type of the response will be in JSON format, and it will include the details of the newly created task, with the same parameters as the request payload.\n\n### Response Body\n\n| Key | Type | Description |\n| --- | --- | --- |\n| id | string | The unique identifier for the task. |\n| title | string | The title of the task. |\n| description | string | A description of the task. |\n| due_date | string | The due date for the task. |\n| status | string | The status of the task. |"
			},
			"response": []
		},
		{
			"name": "Update Task",
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Authorization",
						"value": "bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHBpcmVzQXQiOiIyMDI0LTA4LTA3VDE1OjU2OjExLjUyMjkyMjM4MSswMzowMCIsInVzZXJuYW1lIjoia3lzayJ9.jew0l_fnnlt_piZRPdUbVV3JcdzDNLP81w0PmlnVr_g",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"title\": \"Don't wash the dishes\",\n    \"description\": \"Go to bed instead\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8080/tasks/3",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"tasks",
						"3"
					]
				},
				"description": "### Update Task\n\nThis endpoint is used to update a specific task identified by its ID.\n\n#### Request\n\n- Method: PUT\n    \n- URL: `http://localhost:8080/tasks/4`\n    \n- Headers:\n    \n    - Content-Type: application/json\n        \n- Body:\n    \n    - title (string, required): The updated title of the task.\n        \n    - description (string, required): The updated description of the task.\n        \n\n#### Response\n\n- Status: 200 OK\n    \n- Headers:\n    \n    - Content-Type: application/json\n        \n- Body:\n    \n    ``` json\n      {\n        \"id\": \"\",\n        \"title\": \"\",\n        \"description\": \"\",\n        \"due_date\": \"\",\n        \"status\": \"\"\n      }\n    \n     ```\n    \n\n```\nThe response contains the updated details of the task including its ID, title, description, due date, and status.\n\n ```"
			},
			"response": []
		},
		{
			"name": "Delete Task",
			"request": {
				"method": "DELETE",
				"header": [
					{
						"key": "Authorization",
						"value": "bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6Imt5c2sifQ.pIb58jAfa9Rd3u38AzTLdtU_hGR624P6by2epR_baMM",
						"type": "text"
					}
				],
				"url": {
					"raw": "http://localhost:8080/tasks/3",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"tasks",
						"3"
					]
				},
				"description": "### Delete Task\n\nThis endpoint is used to delete a specific task identified by its ID.\n\n#### Request\n\n- Method: DELETE\n    \n- URL: `http://localhost:8080/tasks/4`\n    \n\n#### Response\n\nThe response for this request follows the JSON schema below:\n\n``` json\n{\n  \"type\": \"object\",\n  \"properties\": {\n    \"message\": {\n      \"type\": \"string\"\n    }\n  }\n}\n\n ```\n\nThe response body will contain a message indicating the success or failure of the deletion operation."
			},
			"response": []
		}
	]
}